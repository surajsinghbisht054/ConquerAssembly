; Hello World Program
; authur : surajsinghbisht054@gmail.com
; Link With (64 bit systems require elf_i386 option): ld -m elf_i386 helloworld.o -o helloworld
; Run with: ./helloworld

; BSS Section
SECTION .bss

; Data Section
SECTION .data
	message		db	"Hello, World!", 0AH ; decleare string and section	.text
   global _start     ;must be declared for linker (ld)
	
_start:	            ;tells linker entry point
   mov	edx,len     ;message length
   mov	ecx,msg     ;message to write
   mov	ebx,1       ;file descriptor (stdout)
   mov	eax,4       ;system call number (sys_write)
   int	0x80        ;call kernel
	
   mov	eax,1       ;system call number (sys_exit)
   int	0x80        ;call kernel

section	.data
msg db 'Hello, world!', 0xa  ;string to be printed
len equ $ - msg     ;length of the string


; text section
SECTION .text
	global _start

_start:
	mov eax, 4  	; Invoke sys_write (stdout, string, string_length)
	mov ebx, 1  	; stdout
	mov ecx, message; move memory address into register
	mov edx, 14 	; Length of String 
	int 80h;	; kernel interup

	; Return Routine
	mov eax, 1	; invoke SYS_EXIT
	mov ebx, 0 	;
	int 80h	;

